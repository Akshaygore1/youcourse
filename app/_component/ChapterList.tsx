import ChapterCard from "@/app/_component/Chapter";
import React from "react";
import { getVideoInfo } from "../utils";

interface Thumbnail {
  url: string;
  width: number;
  height: number;
}

interface Chapter {
  title: string;
  time: number;
  thumbnails: Thumbnail[];
}

interface Chapters {
  areAutoGenerated: boolean;
  chapters: Chapter[];
}

interface VideoData {
  id: string;
  duration: number;
  title: string;
  chapters: Chapters;
}

async function getDuration(videoId: string): Promise<number> {
  const res = await fetch(
    `https://yt.lemnoslife.com/videos?part=contentDetails&id=${videoId}`,
    { cache: "no-store" }
  );
  if (!res.ok) {
    throw new Error("Failed to fetch data");
  }
  const data = await res.json();
  return data.items[0]?.contentDetails?.duration || 0;
}

export default async function ChapterList({
  params,
}: {
  params: { slug: string };
}) {
  const data: VideoData = await getVideoInfo(params.slug);
  const duration = await getDuration(params.slug);

  return (
    <div>
      {data.chapters && data.chapters.chapters.length > 0 ? (
        <div className="p-2 flex flex-col gap-2">
          {data.chapters.chapters.map((chapter, index, arr) => (
            <ChapterCard
              title={chapter.title}
              videoId={params.slug}
              thumbnails={chapter.thumbnails[0].url}
              timeStamp={chapter.time}
              key={chapter.title}
              nextTimestamp={arr[index + 1]?.time}
              lastTimestamp={arr[index - 1]?.time}
              totalDuration={duration}
            />
          ))}
        </div>
      ) : (
        <div className="text-white">No chapters</div>
      )}
    </div>
  );
}
